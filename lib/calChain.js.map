{"version":3,"sources":["../src/calChain.js"],"names":["num","CalChain","value","current","arg","_argCheck","next","n1","intNum","l1","precision","n2","l2","c","Math","abs","m","pow","max","cm","add"],"mappings":"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","file":"calChain.js","sourcesContent":["/**\n * @author 和霁\n * @date 2017-11-15\n */\n\nimport _numToString from './numTostring';\n\nclass CalChain {\n    constructor(num) {\n        this.value = num;\n        this.current = _numToString(num);\n    }\n\n    _argCheck(arg) {\n        if (typeof arg === \"undefined\") {\n            throw \"parameters are missing\";\n        }\n\n        if (typeof arg !== \"number\") {\n            throw `${arg} is not a number `;\n        }\n    }\n\n    add(num) {\n        this._argCheck(num);\n        let next = _numToString(num);\n\n        let { intNum: n1, precision: l1 } = this.current;\n        let { intNum: n2, precision: l2 } = next;\n\n        let c = Math.abs(l1 - l2);\n        let m = Math.pow(10, Math.max(l1, l2));\n        //cm：俩数小数点位数之差*10\n        if (c > 0) {\n            var cm = Math.pow(10, c);\n            l1 > l2 ? (n2 = n2 * cm) : (n1 = n1 * cm);\n        }\n        this.value = (n1 + n2) / m;\n\n        this.current = _numToString(this.value);\n\n        return this;\n    }\n\n    sub(num) {\n        this._argCheck(num);\n        return this.add(-num);\n    }\n\n    mul(num) {\n        this._argCheck(num);\n        let next = _numToString(num);\n\n        let { intNum: n1, precision: l1 } = this.current;\n        let { intNum: n2, precision: l2 } = next;\n\n        let m = l1 + l2;\n\n        this.value = n1 * n2 / Math.pow(10, m);\n\n        this.current = _numToString(this.value);\n\n        return this;\n    }\n\n    div(num) {\n        this._argCheck(num);\n        let next = _numToString(num);\n\n        let { intNum: n1, precision: l1 } = this.current;\n        let { intNum: n2, precision: l2 } = next;\n\n        let m = l2 - l1;\n        let c = Math.abs(m);\n\n        this.value =\n            m >= 0 ? n1 * Math.pow(10, m) / n2 : n1 / (n2 * Math.pow(10, c));\n\n        this.current = _numToString(this.value);\n\n        return this;\n    }\n\n    getValue() {\n        return this.value;\n    }\n}\n\nexport default function(num){\n    return new CalChain(num);\n};\n"]}