{"version":3,"sources":["../src/arithmetic.js"],"names":["Arithmetic","num","value","current","_numToString","arg","l","numString","toString","split","length","e","Number","replace","decimalLen","next","n1","l1","n2","l2","c","Math","abs","m","pow","max","cm","add"],"mappings":"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","file":"arithmetic.js","sourcesContent":["/**\n * @author 和霁\n * @date 2017-11-15\n */\n\nclass Arithmetic {\n    constructor(num) {\n        this.value = num;\n        this.current = this._numToString(num);\n    }\n\n    /**\n     * 利用字符串去除小数点\n     * @param {*} arg 待处理的数据\n     * @return {*} numString 去除小数点转化得到的整数\n     * @return {*} decimalLen 数字精度\n     * -----------------------------------------------------------------\n     */\n    _numToString(arg) {\n        let l, numString;\n        try {\n            numString = arg.toString();\n            l = numString.split(\".\")[1].length;\n        } catch (e) {\n            l = 0;\n        }\n\n        return {\n            numString: Number(numString.replace(\".\", \"\")),\n            decimalLen: l\n        };\n    }\n\n    add(num) {\n        let next = this._numToString(num);\n\n        let { numString: n1, decimalLen: l1 } = this.current;\n        let { numString: n2, decimalLen: l2 } = next;\n\n        let c = Math.abs(l1 - l2);\n        let m = Math.pow(10, Math.max(l1, l2));\n        //cm：俩数小数点位数之差*10\n        if (c > 0) {\n            var cm = Math.pow(10, c);\n            l1 > l2 ? (n2 = n2 * cm) : (n1 = n1 * cm);\n        }\n        this.value = (n1 + n2) / m;\n\n        this.current = this._numToString(this.value);\n\n        return this;\n    }\n\n    sub(num) {\n        this.add(-num);\n    }\n\n    mul(num) {\n        let next = this._numToString(num);\n\n        let { numString: n1, decimalLen: l1 } = this.current;\n        let { numString: n2, decimalLen: l2 } = next;\n\n        let m = l1 + l2;\n\n        this.value = n1 * n2 / Math.pow(10, m);\n\n        this.current = this._numToString(this.value);\n\n        return this;\n    }\n\n    div(num) {\n        let next = this._numToString(num);\n\n        let { numString: n1, decimalLen: l1 } = this.current;\n        let { numString: n2, decimalLen: l2 } = next;\n\n        let m = l2 - l1;\n        let c = Math.abs(m);\n\n        this.value =\n            m >= 0 ? n1 * Math.pow(10, m) / n2 : n1 / (n2 * Math.pow(10, c));\n\n        this.current = this._numToString(this.value);\n\n        return this;\n    }\n\n    getValue() {\n        return this.value;\n    }\n}\n\nexport default Arithmetic;\n"]}